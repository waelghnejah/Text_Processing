{
  "capitalize": {
    "args": 0,
    "arg_labels": [],
    "description": "تحويل أول حرف إلى حرف كبير",
    "example": "\"hello world\" → \"Hello world\""
  },
  "casefold": {
    "args": 0,
    "arg_labels": [],
    "description": "تحويل النص إلى حالة منخفضة خاصة للمقارنة",
    "example": "\"HELLO\" → \"hello\""
  },
  "center": {
    "args": 1,
    "arg_labels": ["📏 عدد الخانات"],
    "description": "وضع النص في المنتصف مع فراغات",
    "example": "\"hi\".center(10) → \"    hi    \""
  },
  "count": {
    "args": 1,
    "arg_labels": ["🔍 العنصر المطلوب عده"],
    "description": "عدد مرات ظهور عنصر معين",
    "example": "\"banana\".count(\"a\") → 3"
  },
  "encode": {
    "args": 0,
    "arg_labels": [],
    "description": "تحويل النص إلى bytes ثم إعادته كنص",
    "example": "\"hello\" → b'hello' → \"hello\""
  },
  "endswith": {
    "args": 1,
    "arg_labels": ["🔚 النهاية المطلوبة"],
    "description": "هل ينتهي النص بجزء معين؟",
    "example": "\"hello\".endswith(\"lo\") → True"
  },
  "expandtabs": {
    "args": 1,
    "arg_labels": ["📏 حجم التاب"],
    "description": "استبدال tab بعدد معين من الفراغات",
    "example": "\"a\\tb\".expandtabs(4) → \"a    b\""
  },
  "find": {
    "args": 1,
    "arg_labels": ["🔍 العنصر المطلوب إيجاده"],
    "description": "إرجاع أول موقع لعنصر معين أو -1",
    "example": "\"hello\".find(\"l\") → 2"
  },
  "format": {
    "args": 2,
    "arg_labels": ["🧩 القيمة الأولى", "🧩 الثانية"],
    "description": "تنسيق النص باستخدام {}",
    "example": "\"Hi {} and {}\".format(\"A\", \"B\") → \"Hi A and B\""
  },
  "format_map": {
    "args": 1,
    "arg_labels": ["🗺️ قاموس القيم"],
    "description": "تنسيق النص باستخدام قاموس",
    "example": "\"Hi {name}\".format_map({'name': 'Wael'})"
  },
  "index": {
    "args": 1,
    "arg_labels": ["🔍 العنصر المطلوب إيجاده"],
    "description": "إرجاع أول موقع لعنصر معين أو خطأ",
    "example": "\"hello\".index(\"l\") → 2"
  },
  "isalnum": {
    "args": 0,
    "arg_labels": [],
    "description": "هل النص يحتوي فقط على حروف أو أرقام؟",
    "example": "\"abc123\" → True"
  },
  "isalpha": {
    "args": 0,
    "arg_labels": [],
    "description": "هل النص يحتوي فقط على حروف؟",
    "example": "\"abc\" → True"
  },
  "isascii": {
    "args": 0,
    "arg_labels": [],
    "description": "هل كل الأحرف ASCII؟",
    "example": "\"hello\" → True"
  },
  "isdecimal": {
    "args": 0,
    "arg_labels": [],
    "description": "هل النص يحتوي فقط على أرقام عشرية؟",
    "example": "\"123\" → True"
  },
  "isdigit": {
    "args": 0,
    "arg_labels": [],
    "description": "هل النص يحتوي فقط على أرقام؟",
    "example": "\"123\" → True"
  },
  "isidentifier": {
    "args": 0,
    "arg_labels": [],
    "description": "هل النص صالح كاسم متغير؟",
    "example": "\"my_var\" → True"
  },
  "islower": {
    "args": 0,
    "arg_labels": [],
    "description": "هل كل الأحرف صغيرة؟",
    "example": "\"hello\" → True"
  },
  "isnumeric": {
    "args": 0,
    "arg_labels": [],
    "description": "هل النص يحتوي فقط على أرقام؟",
    "example": "\"123\" → True"
  },
  "isprintable": {
    "args": 0,
    "arg_labels": [],
    "description": "هل كل الأحرف قابلة للطباعة؟",
    "example": "\"hello\" → True"
  },
  "isspace": {
    "args": 0,
    "arg_labels": [],
    "description": "هل النص يحتوي فقط على فراغات؟",
    "example": "\"   \".isspace() → True"
  },
  "istitle": {
    "args": 0,
    "arg_labels": [],
    "description": "هل النص بصيغة عنوان؟ (أول حرف كبير)",
    "example": "\"Hello World\" → True"
  },
  "isupper": {
    "args": 0,
    "arg_labels": [],
    "description": "هل كل الأحرف كبيرة؟",
    "example": "\"HELLO\" → True"
  },
  "join": {
    "args": 1,
    "arg_labels": ["🔗 الفاصل"],
    "description": "دمج عناصر قائمة باستخدام فاصل",
    "example": "\",\".join(['a','b']) → \"a,b\""
  },
  "ljust": {
    "args": 1,
    "arg_labels": ["📏 العرض المطلوب"],
    "description": "محاذاة النص لليسار مع فراغات",
    "example": "\"hi\".ljust(5) → \"hi   \""
  },
  "lower": {
    "args": 0,
    "arg_labels": [],
    "description": "تحويل كل الأحرف إلى صغيرة",
    "example": "\"HELLO\" → \"hello\""
  },
  "lstrip": {
    "args": 1,
    "arg_labels": ["🧽 المحارف المراد حذفها من اليسار"],
    "description": "حذف المحارف من بداية النص",
    "example": "\"  hello\".lstrip() → \"hello\""
  },
    "maketrans": {
    "args": 1,
    "arg_labels": ["🔤 قاموس التحويل"],
    "description": "إنشاء جدول تحويل محارف",
    "example": "str.maketrans({'a': 'A'})"
  },
  "pad_with_zeros": {
    "args": 1,
    "arg_labels": ["🧮 عدد الخانات"],
    "description": "إضافة أصفار في بداية النص",
    "example": "\"42\".zfill(5) → \"00042\""
  },
  "partition": {
    "args": 1,
    "arg_labels": ["🔍 الفاصل"],
    "description": "تقسيم النص إلى 3 أجزاء حسب الفاصل",
    "example": "\"a-b-c\".partition(\"-\") → ('a', '-', 'b-c')"
  },
  "replace": {
    "args": 2,
    "arg_labels": ["🔍 القديم", "🆕 الجديد"],
    "description": "استبدال جزء معين بجزء آخر",
    "example": "\"hello\".replace(\"l\", \"x\") → \"hexxo\""
  },
  "rfind": {
    "args": 1,
    "arg_labels": ["🔍 العنصر المطلوب إيجاده"],
    "description": "إرجاع آخر موقع لعنصر معين أو -1",
    "example": "\"hello\".rfind(\"l\") → 3"
  },
  "rindex": {
    "args": 1,
    "arg_labels": ["🔍 العنصر المطلوب إيجاده"],
    "description": "إرجاع آخر موقع لعنصر معين أو خطأ",
    "example": "\"hello\".rindex(\"l\") → 3"
  },
  "rjust": {
    "args": 1,
    "arg_labels": ["📏 العرض المطلوب"],
    "description": "محاذاة النص لليمين مع فراغات",
    "example": "\"hi\".rjust(5) → \"   hi\""
  },
  "rpartition": {
    "args": 1,
    "arg_labels": ["🔍 الفاصل"],
    "description": "تقسيم النص من آخر فاصل إلى 3 أجزاء",
    "example": "\"a-b-c\".rpartition(\"-\") → ('a-b', '-', 'c')"
  },
  "rsplit": {
    "args": 1,
    "arg_labels": ["🔍 الفاصل"],
    "description": "تقسيم النص من اليمين حسب الفاصل",
    "example": "\"a-b-c\".rsplit(\"-\") → ['a', 'b', 'c']"
  },
  "rstrip": {
    "args": 1,
    "arg_labels": ["🧽 المحارف المراد حذفها من اليمين"],
    "description": "حذف المحارف من نهاية النص",
    "example": "\"hello   \".rstrip() → \"hello\""
  },
    "split": {
    "args": 1,
    "arg_labels": ["🔍 الفاصل"],
    "description": "تقسيم النص حسب فاصل معين",
    "example": "\"a,b,c\".split(\",\") → ['a', 'b', 'c']"
  },
  "splitlines": {
    "args": 0,
    "arg_labels": [],
    "description": "تقسيم النص إلى أسطر",
    "example": "\"a\\nb\".splitlines() → ['a', 'b']"
  },
  "startswith": {
    "args": 1,
    "arg_labels": ["🔍 البداية المطلوبة"],
    "description": "هل يبدأ النص بجزء معين؟",
    "example": "\"hello\".startswith(\"he\") → True"
  },
  "strip": {
    "args": 1,
    "arg_labels": ["🧽 المحارف المراد حذفها من الطرفين"],
    "description": "حذف المحارف من بداية ونهاية النص",
    "example": "\"  hello  \".strip() → \"hello\""
  },
  "swapcase": {
    "args": 0,
    "arg_labels": [],
    "description": "عكس حالة الأحرف (كبيرة ↔ صغيرة)",
    "example": "\"HeLLo\".swapcase() → \"hEllO\""
  },
  "title": {
    "args": 0,
    "arg_labels": [],
    "description": "تحويل النص إلى صيغة عنوان",
    "example": "\"hello world\".title() → \"Hello World\""
  },
  "translate": {
    "args": 1,
    "arg_labels": ["🔤 جدول التحويل"],
    "description": "تطبيق جدول تحويل على النص",
    "example": "\"abc\".translate(str.maketrans({'a': 'A'})) → \"Abc\""
  },
  "upper": {
    "args": 0,
    "arg_labels": [],
    "description": "تحويل كل الأحرف إلى كبيرة",
    "example": "\"hello\".upper() → \"HELLO\""
  },
  "zfill": {
    "args": 1,
    "arg_labels": ["🧮 عدد الخانات"],
    "description": "إضافة أصفار في بداية النص",
    "example": "\"42\".zfill(5) → \"00042\""
  },
  "reverse_text": {
  "args": 0,
  "arg_labels": [],
  "description": "عكس ترتيب الأحرف في النص",
  "example": "\"Wael\" → \"leaW\""
  },
  "remove_vowels": {
  "args": 0,
  "arg_labels": [],
  "description": "إزالة الحروف الصوتية من النص",
  "example": "\"banana\" → \"bnn\""
  },
  "add_wael_signature": {
  "args": 0,
  "arg_labels": [],
  "description": "إضافة توقيع وائل في نهاية النص",
  "example": "\"مرحبا\" → \"مرحبا ✍️ بإشراف وائل\""
  },
  "zfill_each_word": {
  "args": 1,
  "arg_labels": ["🧮 عدد الخانات لكل كلمة"],
  "description": "إضافة أصفار في بداية كل كلمة داخل الجملة",
  "example": "\"42 hello\" مع 6 → \"000042 000hello\""
  },
  "count_words": {
  "args": 0,
  "arg_labels": [],
  "description": "عدّ عدد الكلمات في النص",
  "example": "\"أنا أحب البرمجة\" → 3"
  },
  "highlight_keywords": {
  "args": 1,
  "arg_labels": ["🔍 الكلمات المطلوب تمييزها (مفصولة بفواصل)"],
  "description": "تمييز كلمات معينة داخل النص بوضعها بين أقواس",
  "example": "\"أنا أحب البرمجة والرياضيات\" مع \"البرمجة, الرياضيات\" → \"أنا أحب [البرمجة] و[الرياضيات]\""
  },
  "emojiify_text": {
  "args": 0,
  "arg_labels": [],
  "description": "إضافة رموز تعبيرية للكلمات الشائعة",
  "example": "\"أنا أحب الذكاء والنجاح\" → \"أنا أحب الذكاء 🧠 والنجاح 🏆\""
  },
  "find_all_positions": {
  "label": "🔍 مواقع كل ظهور",
  "description": "يعرض كل المواقع التي يظهر فيها الجزء المطلوب من النص"
  },
  "safe_index": {
  "label": "🛡️ موقع الكلمة (آمن)",
  "description": "ترجع موقع أول ظهور للكلمة، وإذا لم تكن موجودة تطلع رسالة واضحة بدل انهيار.",
  "example": "safe_index('مرحبا وائل', 'ليزا') → ❌ الكلمة 'ليزا' غير موجودة في النص.",
  "arg_labels": ["🔍 الكلمة المطلوبة"]
  },
  "splitlines_clean": {
  "label": "📄 تقسيم السطور (ذكي)",
  "description": "يقسم النص إلى سطور حقيقية، حتى لو كانت الرموز مكتوبة كـ \\n أو \\r.",
  "example": "splitlines_clean('\"سطر أول\\nسطر ثاني\"') → ['سطر أول', 'سطر ثاني']",
  "arg_labels": []
  },
  "text_operators_lab": {
  "label": "🧪 تجربة العوامل النصية",
  "description": "واجهة تفاعلية لتجربة + * % in not in على النصوص",
  "entry_point": "text_operators_lab.py",
  "category": "نصوص",
  "visible": true
  }
  }